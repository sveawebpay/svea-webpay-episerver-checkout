//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Foundation.Campaign.Connected_Services.MailingReporting
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting")]
    public partial class WebserviceException
    {
        
        private object causeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public object cause
        {
            get
            {
                return this.causeField;
            }
            set
            {
                this.causeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", ConfigurationName="MailingReporting.MailingReportingWebservice")]
    public interface MailingReportingWebservice
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getOpenCountReturn")]
        System.Threading.Tasks.Task<int> getOpenCountAsync(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getClickCountReturn")]
        System.Threading.Tasks.Task<int> getClickCountAsync(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MailingReporting.getLinkUrlsResponse> getLinkUrlsAsync(MailingReporting.getLinkUrlsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MailingReporting.getLinkNamesResponse> getLinkNamesAsync(MailingReporting.getLinkNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<MailingReporting.getClickCountByUrlResponse> getClickCountByUrlAsync(MailingReporting.getClickCountByUrlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getUnsubscribeCountReturn")]
        System.Threading.Tasks.Task<int> getUnsubscribeCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getOverallRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getOverallRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSentRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getSentRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFailedRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getFailedRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getResponseCountReturn")]
        System.Threading.Tasks.Task<int> getResponseCountAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(MailingReporting.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        System.Threading.Tasks.Task<string> getVersionAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getLinkUrls", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getLinkUrlsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=1)]
        public long in1;
        
        public getLinkUrlsRequest()
        {
        }
        
        public getLinkUrlsRequest(string in0, long in1)
        {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getLinkUrlsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getLinkUrlsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getLinkUrlsReturn")]
        public string[] getLinkUrlsReturn;
        
        public getLinkUrlsResponse()
        {
        }
        
        public getLinkUrlsResponse(string[] getLinkUrlsReturn)
        {
            this.getLinkUrlsReturn = getLinkUrlsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getLinkNames", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getLinkNamesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=1)]
        public long in1;
        
        public getLinkNamesRequest()
        {
        }
        
        public getLinkNamesRequest(string in0, long in1)
        {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getLinkNamesResponse", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getLinkNamesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getLinkNamesReturn")]
        public string[] getLinkNamesReturn;
        
        public getLinkNamesResponse()
        {
        }
        
        public getLinkNamesResponse(string[] getLinkNamesReturn)
        {
            this.getLinkNamesReturn = getLinkNamesReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getClickCountByUrl", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getClickCountByUrlRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("in2")]
        public string[] in2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=3)]
        public bool in3;
        
        public getClickCountByUrlRequest()
        {
        }
        
        public getClickCountByUrlRequest(string in0, long in1, string[] in2, bool in3)
        {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
            this.in3 = in3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getClickCountByUrlResponse", WrapperNamespace="urn:api.broadmail.de/soap11/MailingReporting", IsWrapped=true)]
    public partial class getClickCountByUrlResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/MailingReporting", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getClickCountByUrlReturn")]
        public int[] getClickCountByUrlReturn;
        
        public getClickCountByUrlResponse()
        {
        }
        
        public getClickCountByUrlResponse(int[] getClickCountByUrlReturn)
        {
            this.getClickCountByUrlReturn = getClickCountByUrlReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface MailingReportingWebserviceChannel : MailingReporting.MailingReportingWebservice, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class MailingReportingWebserviceClient : System.ServiceModel.ClientBase<MailingReporting.MailingReportingWebservice>, MailingReporting.MailingReportingWebservice
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MailingReportingWebserviceClient() : 
                base(MailingReportingWebserviceClient.GetDefaultBinding(), MailingReportingWebserviceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.MailingReporting.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MailingReportingWebserviceClient(EndpointConfiguration endpointConfiguration) : 
                base(MailingReportingWebserviceClient.GetBindingForEndpoint(endpointConfiguration), MailingReportingWebserviceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MailingReportingWebserviceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MailingReportingWebserviceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MailingReportingWebserviceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MailingReportingWebserviceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MailingReportingWebserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<int> getOpenCountAsync(string in0, long in1, bool in2)
        {
            return base.Channel.getOpenCountAsync(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<int> getClickCountAsync(string in0, long in1, bool in2)
        {
            return base.Channel.getClickCountAsync(in0, in1, in2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MailingReporting.getLinkUrlsResponse> MailingReporting.MailingReportingWebservice.getLinkUrlsAsync(MailingReporting.getLinkUrlsRequest request)
        {
            return base.Channel.getLinkUrlsAsync(request);
        }
        
        public System.Threading.Tasks.Task<MailingReporting.getLinkUrlsResponse> getLinkUrlsAsync(string in0, long in1)
        {
            MailingReporting.getLinkUrlsRequest inValue = new MailingReporting.getLinkUrlsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((MailingReporting.MailingReportingWebservice)(this)).getLinkUrlsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MailingReporting.getLinkNamesResponse> MailingReporting.MailingReportingWebservice.getLinkNamesAsync(MailingReporting.getLinkNamesRequest request)
        {
            return base.Channel.getLinkNamesAsync(request);
        }
        
        public System.Threading.Tasks.Task<MailingReporting.getLinkNamesResponse> getLinkNamesAsync(string in0, long in1)
        {
            MailingReporting.getLinkNamesRequest inValue = new MailingReporting.getLinkNamesRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((MailingReporting.MailingReportingWebservice)(this)).getLinkNamesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MailingReporting.getClickCountByUrlResponse> MailingReporting.MailingReportingWebservice.getClickCountByUrlAsync(MailingReporting.getClickCountByUrlRequest request)
        {
            return base.Channel.getClickCountByUrlAsync(request);
        }
        
        public System.Threading.Tasks.Task<MailingReporting.getClickCountByUrlResponse> getClickCountByUrlAsync(string in0, long in1, string[] in2, bool in3)
        {
            MailingReporting.getClickCountByUrlRequest inValue = new MailingReporting.getClickCountByUrlRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            return ((MailingReporting.MailingReportingWebservice)(this)).getClickCountByUrlAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<int> getUnsubscribeCountAsync(string in0, long in1)
        {
            return base.Channel.getUnsubscribeCountAsync(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getOverallRecipientCountAsync(string in0, long in1)
        {
            return base.Channel.getOverallRecipientCountAsync(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getSentRecipientCountAsync(string in0, long in1)
        {
            return base.Channel.getSentRecipientCountAsync(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getFailedRecipientCountAsync(string in0, long in1)
        {
            return base.Channel.getFailedRecipientCountAsync(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getResponseCountAsync(string in0, long in1, string in2)
        {
            return base.Channel.getResponseCountAsync(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> getVersionAsync()
        {
            return base.Channel.getVersionAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MailingReporting))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MailingReporting))
            {
                return new System.ServiceModel.EndpointAddress("https://api.campaign.episerver.net/soap11/MailingReporting");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MailingReportingWebserviceClient.GetBindingForEndpoint(EndpointConfiguration.MailingReporting);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MailingReportingWebserviceClient.GetEndpointAddress(EndpointConfiguration.MailingReporting);
        }
        
        public enum EndpointConfiguration
        {
            
            MailingReporting,
        }
    }
}
